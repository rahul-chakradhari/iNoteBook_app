{
    "sourceFile": "src/context/notes/NoteState.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 14,
            "patches": [
                {
                    "date": 1739441594777,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1739441658721,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,10 +12,9 @@\n     const response = await fetch(`${host}/api/notes/fetchallnotes`, {\r\n       method: \"GET\",\r\n       headers: {\r\n         \"Content-Type\": \"application/json\",\r\n-        \"auth-token\":\r\n-          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjEzMWRjNWUzZTQwMzdjZDQ3MzRhMDY2In0sImlhdCI6MTYzMDY2OTU5Nn0.hJS0hx6I7ROugkqjL2CjrJuefA3pJi-IU5yGUbRHI4Q\",\r\n+        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n       },\r\n     });\r\n     const json = await response.json();\r\n     setNotes(json);\r\n"
                },
                {
                    "date": 1739441684227,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n \r\n const NoteState = (props) => {\r\n   const host = \"http://localhost:5000\";\r\n   const notesInitial = [];\r\n-  const [notes, setNotes] = useState(notesInitial);\r\n+  const [notes, setNotes] = useState([]);\r\n \r\n   // Get all Notes\r\n   const getNotes = async () => {\r\n     // API Call\r\n"
                },
                {
                    "date": 1739441770281,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,10 +27,9 @@\n     const response = await fetch(`${host}/api/notes/addnote`, {\r\n       method: \"POST\",\r\n       headers: {\r\n         \"Content-Type\": \"application/json\",\r\n-        \"auth-token\":\r\n-          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjEzMWRjNWUzZTQwMzdjZDQ3MzRhMDY2In0sImlhdCI6MTYzMDY2OTU5Nn0.hJS0hx6I7ROugkqjL2CjrJuefA3pJi-IU5yGUbRHI4Q\",\r\n+        \"auth-token\": localStorage.getItem(\"token\"),\r\n       },\r\n       body: JSON.stringify({ title, description, tag }),\r\n     });\r\n \r\n"
                },
                {
                    "date": 1739441775892,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,10 +43,9 @@\n     const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\r\n       method: \"DELETE\",\r\n       headers: {\r\n         \"Content-Type\": \"application/json\",\r\n-        \"auth-token\":\r\n-          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjEzMWRjNWUzZTQwMzdjZDQ3MzRhMDY2In0sImlhdCI6MTYzMDY2OTU5Nn0.hJS0hx6I7ROugkqjL2CjrJuefA3pJi-IU5yGUbRHI4Q\",\r\n+        \"auth-token\": localStorage.getItem(\"token\"),\r\n       },\r\n     });\r\n     const json = response.json();\r\n     const newNotes = notes.filter((note) => {\r\n"
                },
                {
                    "date": 1739441782052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,10 +60,9 @@\n     const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\r\n       method: \"PUT\",\r\n       headers: {\r\n         \"Content-Type\": \"application/json\",\r\n-        \"auth-token\":\r\n-          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjEzMWRjNWUzZTQwMzdjZDQ3MzRhMDY2In0sImlhdCI6MTYzMDY2OTU5Nn0.hJS0hx6I7ROugkqjL2CjrJuefA3pJi-IU5yGUbRHI4Q\",\r\n+        \"auth-token\": localStorage.getItem(\"token\"),\r\n       },\r\n       body: JSON.stringify({ title, description, tag }),\r\n     });\r\n     const json = await response.json();\r\n"
                },
                {
                    "date": 1739441792502,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n     const response = await fetch(`${host}/api/notes/fetchallnotes`, {\r\n       method: \"GET\",\r\n       headers: {\r\n         \"Content-Type\": \"application/json\",\r\n-        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n+        \"auth-token\": localStorage.getItem(\"token\"),\r\n       },\r\n     });\r\n     const json = await response.json();\r\n     setNotes(json);\r\n"
                },
                {
                    "date": 1739441894724,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,84 +2,102 @@\n import { useState } from \"react\";\r\n \r\n const NoteState = (props) => {\r\n   const host = \"http://localhost:5000\";\r\n-  const notesInitial = [];\r\n   const [notes, setNotes] = useState([]);\r\n \r\n   // Get all Notes\r\n   const getNotes = async () => {\r\n-    // API Call\r\n-    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\r\n-      method: \"GET\",\r\n-      headers: {\r\n-        \"Content-Type\": \"application/json\",\r\n-        \"auth-token\": localStorage.getItem(\"token\"),\r\n-      },\r\n-    });\r\n-    const json = await response.json();\r\n-    setNotes(json);\r\n+    try {\r\n+      const response = await fetch(`${host}/api/notes/fetchallnotes`, {\r\n+        method: \"GET\",\r\n+        headers: {\r\n+          \"Content-Type\": \"application/json\",\r\n+          \"auth-token\": localStorage.getItem(\"token\"),\r\n+        },\r\n+      });\r\n+\r\n+      if (!response.ok) {\r\n+        throw new Error(\"Failed to fetch notes\");\r\n+      }\r\n+\r\n+      const json = await response.json();\r\n+      setNotes(json);\r\n+    } catch (error) {\r\n+      console.error(\"Error fetching notes:\", error);\r\n+    }\r\n   };\r\n \r\n   // Add a Note\r\n   const addNote = async (title, description, tag) => {\r\n-    // TODO: API Call\r\n-    // API Call\r\n-    const response = await fetch(`${host}/api/notes/addnote`, {\r\n-      method: \"POST\",\r\n-      headers: {\r\n-        \"Content-Type\": \"application/json\",\r\n-        \"auth-token\": localStorage.getItem(\"token\"),\r\n-      },\r\n-      body: JSON.stringify({ title, description, tag }),\r\n-    });\r\n+    try {\r\n+      const response = await fetch(`${host}/api/notes/addnote`, {\r\n+        method: \"POST\",\r\n+        headers: {\r\n+          \"Content-Type\": \"application/json\",\r\n+          \"auth-token\": localStorage.getItem(\"token\"),\r\n+        },\r\n+        body: JSON.stringify({ title, description, tag }),\r\n+      });\r\n \r\n-    const note = await response.json();\r\n-    setNotes(notes.concat(note));\r\n+      if (!response.ok) {\r\n+        throw new Error(\"Failed to add note\");\r\n+      }\r\n+\r\n+      const note = await response.json();\r\n+      setNotes((prevNotes) => [...prevNotes, note]); // Use previous state\r\n+    } catch (error) {\r\n+      console.error(\"Error adding note:\", error);\r\n+    }\r\n   };\r\n \r\n   // Delete a Note\r\n   const deleteNote = async (id) => {\r\n-    // API Call\r\n-    const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\r\n-      method: \"DELETE\",\r\n-      headers: {\r\n-        \"Content-Type\": \"application/json\",\r\n-        \"auth-token\": localStorage.getItem(\"token\"),\r\n-      },\r\n-    });\r\n-    const json = response.json();\r\n-    const newNotes = notes.filter((note) => {\r\n-      return note._id !== id;\r\n-    });\r\n-    setNotes(newNotes);\r\n+    try {\r\n+      const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\r\n+        method: \"DELETE\",\r\n+        headers: {\r\n+          \"Content-Type\": \"application/json\",\r\n+          \"auth-token\": localStorage.getItem(\"token\"),\r\n+        },\r\n+      });\r\n+\r\n+      if (!response.ok) {\r\n+        throw new Error(\"Failed to delete note\");\r\n+      }\r\n+\r\n+      const json = await response.json();\r\n+      setNotes((prevNotes) => prevNotes.filter((note) => note._id !== id)); // Filter out the deleted note\r\n+    } catch (error) {\r\n+      console.error(\"Error deleting note:\", error);\r\n+    }\r\n   };\r\n \r\n   // Edit a Note\r\n   const editNote = async (id, title, description, tag) => {\r\n-    // API Call\r\n-    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\r\n-      method: \"PUT\",\r\n-      headers: {\r\n-        \"Content-Type\": \"application/json\",\r\n-        \"auth-token\": localStorage.getItem(\"token\"),\r\n-      },\r\n-      body: JSON.stringify({ title, description, tag }),\r\n-    });\r\n-    const json = await response.json();\r\n+    try {\r\n+      const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\r\n+        method: \"PUT\",\r\n+        headers: {\r\n+          \"Content-Type\": \"application/json\",\r\n+          \"auth-token\": localStorage.getItem(\"token\"),\r\n+        },\r\n+        body: JSON.stringify({ title, description, tag }),\r\n+      });\r\n \r\n-    let newNotes = JSON.parse(JSON.stringify(notes));\r\n-    // Logic to edit in client\r\n-    for (let index = 0; index < newNotes.length; index++) {\r\n-      const element = newNotes[index];\r\n-      if (element._id === id) {\r\n-        newNotes[index].title = title;\r\n-        newNotes[index].description = description;\r\n-        newNotes[index].tag = tag;\r\n-        break;\r\n+      if (!response.ok) {\r\n+        throw new Error(\"Failed to update note\");\r\n       }\r\n+\r\n+      const json = await response.json();\r\n+      setNotes((prevNotes) =>\r\n+        prevNotes.map((note) =>\r\n+          note._id === id ? { ...note, title, description, tag } : note\r\n+        )\r\n+      ); // Update the note in the list\r\n+    } catch (error) {\r\n+      console.error(\"Error updating note:\", error);\r\n     }\r\n-    setNotes(newNotes);\r\n   };\r\n \r\n   return (\r\n     <NoteContext.Provider\r\n@@ -88,5 +106,6 @@\n       {props.children}\r\n     </NoteContext.Provider>\r\n   );\r\n };\r\n+\r\n export default NoteState;\r\n"
                },
                {
                    "date": 1739448331385,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,31 +26,31 @@\n       console.error(\"Error fetching notes:\", error);\r\n     }\r\n   };\r\n \r\n-  // Add a Note\r\n-  const addNote = async (title, description, tag) => {\r\n-    try {\r\n-      const response = await fetch(`${host}/api/notes/addnote`, {\r\n-        method: \"POST\",\r\n-        headers: {\r\n-          \"Content-Type\": \"application/json\",\r\n-          \"auth-token\": localStorage.getItem(\"token\"),\r\n-        },\r\n-        body: JSON.stringify({ title, description, tag }),\r\n-      });\r\n+  // Add a Noteconst addNote = async (title, description, priority) => {\r\n+  try {\r\n+    const response = await fetch(`${host}/api/notes/addnote`, {\r\n+      method: \"POST\",\r\n+      headers: {\r\n+        \"Content-Type\": \"application/json\",\r\n+        \"auth-token\": localStorage.getItem(\"token\"),\r\n+      },\r\n+      body: JSON.stringify({ title, description, priority }), // Correct field name\r\n+    });\r\n \r\n-      if (!response.ok) {\r\n-        throw new Error(\"Failed to add note\");\r\n-      }\r\n-\r\n-      const note = await response.json();\r\n-      setNotes((prevNotes) => [...prevNotes, note]); // Use previous state\r\n-    } catch (error) {\r\n-      console.error(\"Error adding note:\", error);\r\n+    if (!response.ok) {\r\n+      throw new Error(\"Failed to add note\");\r\n     }\r\n-  };\r\n \r\n+    const note = await response.json();\r\n+    setNotes((prevNotes) => [...prevNotes, note]); // Use previous state\r\n+  } catch (error) {\r\n+    console.error(\"Error adding note:\", error);\r\n+  }\r\n+};\r\n+\r\n+\r\n   // Delete a Note\r\n   const deleteNote = async (id) => {\r\n     try {\r\n       const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\r\n"
                },
                {
                    "date": 1739448406903,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,31 +26,31 @@\n       console.error(\"Error fetching notes:\", error);\r\n     }\r\n   };\r\n \r\n-  // Add a Noteconst addNote = async (title, description, priority) => {\r\n-  try {\r\n-    const response = await fetch(`${host}/api/notes/addnote`, {\r\n-      method: \"POST\",\r\n-      headers: {\r\n-        \"Content-Type\": \"application/json\",\r\n-        \"auth-token\": localStorage.getItem(\"token\"),\r\n-      },\r\n-      body: JSON.stringify({ title, description, priority }), // Correct field name\r\n-    });\r\n+  // Add a Note\r\n+  const addNote = async (title, description, priority) => {\r\n+    try {\r\n+      const response = await fetch(`${host}/api/notes/addnote`, {\r\n+        method: \"POST\",\r\n+        headers: {\r\n+          \"Content-Type\": \"application/json\",\r\n+          \"auth-token\": localStorage.getItem(\"token\"),\r\n+        },\r\n+        body: JSON.stringify({ title, description, priority }), // Correct field name 'priority'\r\n+      });\r\n \r\n-    if (!response.ok) {\r\n-      throw new Error(\"Failed to add note\");\r\n+      if (!response.ok) {\r\n+        throw new Error(\"Failed to add note\");\r\n+      }\r\n+\r\n+      const note = await response.json();\r\n+      setNotes((prevNotes) => [...prevNotes, note]); // Use previous state to append the new note\r\n+    } catch (error) {\r\n+      console.error(\"Error adding note:\", error);\r\n     }\r\n+  };\r\n \r\n-    const note = await response.json();\r\n-    setNotes((prevNotes) => [...prevNotes, note]); // Use previous state\r\n-  } catch (error) {\r\n-    console.error(\"Error adding note:\", error);\r\n-  }\r\n-};\r\n-\r\n-\r\n   // Delete a Note\r\n   const deleteNote = async (id) => {\r\n     try {\r\n       const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\r\n@@ -64,25 +64,25 @@\n       if (!response.ok) {\r\n         throw new Error(\"Failed to delete note\");\r\n       }\r\n \r\n-      const json = await response.json();\r\n-      setNotes((prevNotes) => prevNotes.filter((note) => note._id !== id)); // Filter out the deleted note\r\n+      setNotes((prevNotes) => prevNotes.filter((note) => note._id !== id)); // Remove the deleted note from state\r\n     } catch (error) {\r\n       console.error(\"Error deleting note:\", error);\r\n     }\r\n   };\r\n \r\n   // Edit a Note\r\n-  const editNote = async (id, title, description, tag) => {\r\n+  const editNote = async (id, title, description, priority) => {\r\n+    // Corrected 'tag' to 'priority'\r\n     try {\r\n       const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\r\n         method: \"PUT\",\r\n         headers: {\r\n           \"Content-Type\": \"application/json\",\r\n           \"auth-token\": localStorage.getItem(\"token\"),\r\n         },\r\n-        body: JSON.stringify({ title, description, tag }),\r\n+        body: JSON.stringify({ title, description, priority }), // Use 'priority' here too\r\n       });\r\n \r\n       if (!response.ok) {\r\n         throw new Error(\"Failed to update note\");\r\n@@ -90,9 +90,9 @@\n \r\n       const json = await response.json();\r\n       setNotes((prevNotes) =>\r\n         prevNotes.map((note) =>\r\n-          note._id === id ? { ...note, title, description, tag } : note\r\n+          note._id === id ? { ...note, title, description, priority } : note\r\n         )\r\n       ); // Update the note in the list\r\n     } catch (error) {\r\n       console.error(\"Error updating note:\", error);\r\n"
                },
                {
                    "date": 1739448819608,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,9 @@\n \r\n       const json = await response.json();\r\n       setNotes((prevNotes) =>\r\n         prevNotes.map((note) =>\r\n-          note._id === id ? { ...note, title, description, priority } : note\r\n+          note._id === id ? { ...note, title, priority } : note\r\n         )\r\n       ); // Update the note in the list\r\n     } catch (error) {\r\n       console.error(\"Error updating note:\", error);\r\n"
                },
                {
                    "date": 1739461875085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,29 +72,36 @@\n   };\r\n \r\n   // Edit a Note\r\n   const editNote = async (id, title, description, priority) => {\r\n-    // Corrected 'tag' to 'priority'\r\n     try {\r\n       const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\r\n         method: \"PUT\",\r\n         headers: {\r\n           \"Content-Type\": \"application/json\",\r\n           \"auth-token\": localStorage.getItem(\"token\"),\r\n         },\r\n-        body: JSON.stringify({ title, description, priority }), // Use 'priority' here too\r\n+        body: JSON.stringify({ title, description, priority }),\r\n       });\r\n \r\n       if (!response.ok) {\r\n         throw new Error(\"Failed to update note\");\r\n       }\r\n \r\n-      const json = await response.json();\r\n+      const updatedNote = await response.json();\r\n+\r\n       setNotes((prevNotes) =>\r\n         prevNotes.map((note) =>\r\n-          note._id === id ? { ...note, title, priority } : note\r\n+          note._id === id\r\n+            ? {\r\n+                ...note,\r\n+                title: updatedNote.title,\r\n+                description: updatedNote.description,\r\n+                priority: updatedNote.priority,\r\n+              }\r\n+            : note\r\n         )\r\n-      ); // Update the note in the list\r\n+      ); // ✅ Ensures priority gets updated in the state\r\n     } catch (error) {\r\n       console.error(\"Error updating note:\", error);\r\n     }\r\n   };\r\n"
                },
                {
                    "date": 1739462083299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,14 @@\n         throw new Error(\"Failed to fetch notes\");\r\n       }\r\n \r\n       const json = await response.json();\r\n-      setNotes(json);\r\n+      setNotes(\r\n+        json.map((note) => ({\r\n+          ...note,\r\n+          priority: note.priority || \"Low\", // Ensure priority is always set\r\n+        }))\r\n+      );\r\n     } catch (error) {\r\n       console.error(\"Error fetching notes:\", error);\r\n     }\r\n   };\r\n"
                },
                {
                    "date": 1739462104476,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,13 +100,13 @@\n             ? {\r\n                 ...note,\r\n                 title: updatedNote.title,\r\n                 description: updatedNote.description,\r\n-                priority: updatedNote.priority,\r\n+                priority: updatedNote.priority, // ✅ Update priority properly\r\n               }\r\n             : note\r\n         )\r\n-      ); // ✅ Ensures priority gets updated in the state\r\n+      );\r\n     } catch (error) {\r\n       console.error(\"Error updating note:\", error);\r\n     }\r\n   };\r\n"
                },
                {
                    "date": 1739462962680,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,9 +100,9 @@\n             ? {\r\n                 ...note,\r\n                 title: updatedNote.title,\r\n                 description: updatedNote.description,\r\n-                priority: updatedNote.priority, // ✅ Update priority properly\r\n+                priority: updatedNote.priority,\r\n               }\r\n             : note\r\n         )\r\n       );\r\n"
                }
            ],
            "date": 1739441594777,
            "name": "Commit-0",
            "content": "import NoteContext from \"./noteContext\";\r\nimport { useState } from \"react\";\r\n\r\nconst NoteState = (props) => {\r\n  const host = \"http://localhost:5000\";\r\n  const notesInitial = [];\r\n  const [notes, setNotes] = useState(notesInitial);\r\n\r\n  // Get all Notes\r\n  const getNotes = async () => {\r\n    // API Call\r\n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\r\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjEzMWRjNWUzZTQwMzdjZDQ3MzRhMDY2In0sImlhdCI6MTYzMDY2OTU5Nn0.hJS0hx6I7ROugkqjL2CjrJuefA3pJi-IU5yGUbRHI4Q\",\r\n      },\r\n    });\r\n    const json = await response.json();\r\n    setNotes(json);\r\n  };\r\n\r\n  // Add a Note\r\n  const addNote = async (title, description, tag) => {\r\n    // TODO: API Call\r\n    // API Call\r\n    const response = await fetch(`${host}/api/notes/addnote`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\r\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjEzMWRjNWUzZTQwMzdjZDQ3MzRhMDY2In0sImlhdCI6MTYzMDY2OTU5Nn0.hJS0hx6I7ROugkqjL2CjrJuefA3pJi-IU5yGUbRHI4Q\",\r\n      },\r\n      body: JSON.stringify({ title, description, tag }),\r\n    });\r\n\r\n    const note = await response.json();\r\n    setNotes(notes.concat(note));\r\n  };\r\n\r\n  // Delete a Note\r\n  const deleteNote = async (id) => {\r\n    // API Call\r\n    const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\r\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjEzMWRjNWUzZTQwMzdjZDQ3MzRhMDY2In0sImlhdCI6MTYzMDY2OTU5Nn0.hJS0hx6I7ROugkqjL2CjrJuefA3pJi-IU5yGUbRHI4Q\",\r\n      },\r\n    });\r\n    const json = response.json();\r\n    const newNotes = notes.filter((note) => {\r\n      return note._id !== id;\r\n    });\r\n    setNotes(newNotes);\r\n  };\r\n\r\n  // Edit a Note\r\n  const editNote = async (id, title, description, tag) => {\r\n    // API Call\r\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\r\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjEzMWRjNWUzZTQwMzdjZDQ3MzRhMDY2In0sImlhdCI6MTYzMDY2OTU5Nn0.hJS0hx6I7ROugkqjL2CjrJuefA3pJi-IU5yGUbRHI4Q\",\r\n      },\r\n      body: JSON.stringify({ title, description, tag }),\r\n    });\r\n    const json = await response.json();\r\n\r\n    let newNotes = JSON.parse(JSON.stringify(notes));\r\n    // Logic to edit in client\r\n    for (let index = 0; index < newNotes.length; index++) {\r\n      const element = newNotes[index];\r\n      if (element._id === id) {\r\n        newNotes[index].title = title;\r\n        newNotes[index].description = description;\r\n        newNotes[index].tag = tag;\r\n        break;\r\n      }\r\n    }\r\n    setNotes(newNotes);\r\n  };\r\n\r\n  return (\r\n    <NoteContext.Provider\r\n      value={{ notes, addNote, deleteNote, editNote, getNotes }}\r\n    >\r\n      {props.children}\r\n    </NoteContext.Provider>\r\n  );\r\n};\r\nexport default NoteState;\r\n"
        }
    ]
}