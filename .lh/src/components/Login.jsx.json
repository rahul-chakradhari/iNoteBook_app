{
    "sourceFile": "src/components/Login.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 15,
            "patches": [
                {
                    "date": 1739441177164,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1739441336077,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,10 @@\n import React, { useState } from \"react\";\r\n-import { useHistory } from \"react-router-dom\";\r\n+import { useNavigate } from \"react-router-dom\";\r\n \r\n-const Login = (props) => {\r\n+const Login = () => {\r\n   const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\r\n-  let history = useHistory();\r\n+  const navigate = useNavigate(); // Using useNavigate instead of useHistory\r\n \r\n   const handleSubmit = async (e) => {\r\n     e.preventDefault();\r\n     const response = await fetch(\"http://localhost:5000/api/auth/login\", {\r\n@@ -21,9 +21,9 @@\n     console.log(json);\r\n     if (json.success) {\r\n       // Save the auth token and redirect\r\n       localStorage.setItem(\"token\", json.authtoken);\r\n-      history.push(\"/\");\r\n+      navigate(\"/\"); // navigate replaces history.push\r\n     } else {\r\n       alert(\"Invalid credentials\");\r\n     }\r\n   };\r\n"
                },
                {
                    "date": 1739445607425,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,12 @@\n     console.log(json);\r\n     if (json.success) {\r\n       // Save the auth token and redirect\r\n       localStorage.setItem(\"token\", json.authtoken);\r\n-      navigate(\"/\"); // navigate replaces history.push\r\n+      setTimeout(() => {\r\n+        navigate(\"/\"); // Hide the alert\r\n+      }, 500);\r\n+      // navigate replaces history.push\r\n     } else {\r\n       alert(\"Invalid credentials\");\r\n     }\r\n   };\r\n"
                },
                {
                    "date": 1739445711962,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,9 @@\n     console.log(json);\r\n     if (json.success) {\r\n       // Save the auth token and redirect\r\n       localStorage.setItem(\"token\", json.authtoken);\r\n+      setAlert(\"Login successful! Welcome to iNotebook.\");\r\n       setTimeout(() => {\r\n         navigate(\"/\"); // Hide the alert\r\n       }, 500);\r\n       // navigate replaces history.push\r\n"
                },
                {
                    "date": 1739445743105,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n     console.log(json);\r\n     if (json.success) {\r\n       // Save the auth token and redirect\r\n       localStorage.setItem(\"token\", json.authtoken);\r\n-      setAlert(\"Login successful! Welcome to iNotebook.\");\r\n+\r\n       setTimeout(() => {\r\n         navigate(\"/\"); // Hide the alert\r\n       }, 500);\r\n       // navigate replaces history.push\r\n"
                },
                {
                    "date": 1739445803474,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import { useNavigate } from \"react-router-dom\";\r\n \r\n const Login = () => {\r\n   const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\r\n+  const [alert, setAlert] = useState(\"\"); // State to show alert\r\n   const navigate = useNavigate(); // Using useNavigate instead of useHistory\r\n \r\n   const handleSubmit = async (e) => {\r\n     e.preventDefault();\r\n@@ -18,16 +19,21 @@\n       }),\r\n     });\r\n     const json = await response.json();\r\n     console.log(json);\r\n+\r\n     if (json.success) {\r\n-      // Save the auth token and redirect\r\n+      // Save the auth token\r\n       localStorage.setItem(\"token\", json.authtoken);\r\n \r\n+      // Show success alert\r\n+      setAlert(\"Login successful! Redirecting...\");\r\n+\r\n+      // Hide the alert after 0.5 seconds and navigate to home page\r\n       setTimeout(() => {\r\n-        navigate(\"/\"); // Hide the alert\r\n-      }, 500);\r\n-      // navigate replaces history.push\r\n+        setAlert(\"\"); // Clear the alert message\r\n+        navigate(\"/\"); // Redirect to the home page\r\n+      }, 500); // 0.5 seconds delay\r\n     } else {\r\n       alert(\"Invalid credentials\");\r\n     }\r\n   };\r\n@@ -36,9 +42,10 @@\n     setCredentials({ ...credentials, [e.target.name]: e.target.value });\r\n   };\r\n \r\n   return (\r\n-    <div>\r\n+    <div className=\"container my-3\">\r\n+      <h2>Login</h2>\r\n       <form onSubmit={handleSubmit}>\r\n         <div className=\"mb-3\">\r\n           <label htmlFor=\"email\" className=\"form-label\">\r\n             Email address\r\n@@ -73,8 +80,11 @@\n         <button type=\"submit\" className=\"btn btn-primary\">\r\n           Submit\r\n         </button>\r\n       </form>\r\n+\r\n+      {/* Show success alert */}\r\n+      {alert && <div className=\"alert alert-success mt-3\">{alert}</div>}\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1739445876345,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,8 +43,11 @@\n   };\r\n \r\n   return (\r\n     <div className=\"container my-3\">\r\n+      {/* Show success alert at the top */}\r\n+      {alert && <div className=\"alert alert-success mt-3\">{alert}</div>}\r\n+\r\n       <h2>Login</h2>\r\n       <form onSubmit={handleSubmit}>\r\n         <div className=\"mb-3\">\r\n           <label htmlFor=\"email\" className=\"form-label\">\r\n@@ -80,11 +83,8 @@\n         <button type=\"submit\" className=\"btn btn-primary\">\r\n           Submit\r\n         </button>\r\n       </form>\r\n-\r\n-      {/* Show success alert */}\r\n-      {alert && <div className=\"alert alert-success mt-3\">{alert}</div>}\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1739445909150,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n       // Hide the alert after 0.5 seconds and navigate to home page\r\n       setTimeout(() => {\r\n         setAlert(\"\"); // Clear the alert message\r\n         navigate(\"/\"); // Redirect to the home page\r\n-      }, 500); // 0.5 seconds delay\r\n+      }, 2000); // 0.5 seconds delay\r\n     } else {\r\n       alert(\"Invalid credentials\");\r\n     }\r\n   };\r\n"
                },
                {
                    "date": 1739445938332,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n       // Hide the alert after 0.5 seconds and navigate to home page\r\n       setTimeout(() => {\r\n         setAlert(\"\"); // Clear the alert message\r\n         navigate(\"/\"); // Redirect to the home page\r\n-      }, 2000); // 0.5 seconds delay\r\n+      }, 1000); // 0.5 seconds delay\r\n     } else {\r\n       alert(\"Invalid credentials\");\r\n     }\r\n   };\r\n"
                },
                {
                    "date": 1739535380251,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,38 +4,28 @@\n const Login = () => {\r\n   const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\r\n   const [alert, setAlert] = useState(\"\"); // State to show alert\r\n   const navigate = useNavigate(); // Using useNavigate instead of useHistory\r\n-\r\n   const handleSubmit = async (e) => {\r\n     e.preventDefault();\r\n+\r\n     const response = await fetch(\"http://localhost:5000/api/auth/login\", {\r\n       method: \"POST\",\r\n       headers: {\r\n         \"Content-Type\": \"application/json\",\r\n       },\r\n-      body: JSON.stringify({\r\n-        email: credentials.email,\r\n-        password: credentials.password,\r\n-      }),\r\n+      body: JSON.stringify({ email, password }),\r\n     });\r\n+\r\n     const json = await response.json();\r\n-    console.log(json);\r\n+    console.log(\"Login response:\", json); // Debugging login response\r\n \r\n     if (json.success) {\r\n-      // Save the auth token\r\n-      localStorage.setItem(\"token\", json.authtoken);\r\n-\r\n-      // Show success alert\r\n-      setAlert(\"Login successful! Redirecting...\");\r\n-\r\n-      // Hide the alert after 0.5 seconds and navigate to home page\r\n-      setTimeout(() => {\r\n-        setAlert(\"\"); // Clear the alert message\r\n-        navigate(\"/\"); // Redirect to the home page\r\n-      }, 1000); // 0.5 seconds delay\r\n+      localStorage.setItem(\"token\", json.authToken); // Store token in localStorage\r\n+      alert(\"Login Successful!\"); // Ensure alert is used correctly\r\n+      window.location.href = \"/\"; // Redirect user\r\n     } else {\r\n-      alert(\"Invalid credentials\");\r\n+      alert(json.error || \"Invalid login credentials!\");\r\n     }\r\n   };\r\n \r\n   const onChange = (e) => {\r\n"
                },
                {
                    "date": 1739535751713,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,27 +5,26 @@\n   const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\r\n   const [alert, setAlert] = useState(\"\"); // State to show alert\r\n   const navigate = useNavigate(); // Using useNavigate instead of useHistory\r\n   const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n+    e.preventDefault(); // Prevent page reload\r\n \r\n+    const email = e.target.email.value; // Get email input value\r\n+    const password = e.target.password.value; // Get password input value\r\n+\r\n     const response = await fetch(\"http://localhost:5000/api/auth/login\", {\r\n       method: \"POST\",\r\n-      headers: {\r\n-        \"Content-Type\": \"application/json\",\r\n-      },\r\n-      body: JSON.stringify({ email, password }),\r\n+      headers: { \"Content-Type\": \"application/json\" },\r\n+      body: JSON.stringify({ email, password }), // ✅ Pass only values, NOT event or elements\r\n     });\r\n \r\n-    const json = await response.json();\r\n-    console.log(\"Login response:\", json); // Debugging login response\r\n+    const data = await response.json();\r\n \r\n-    if (json.success) {\r\n-      localStorage.setItem(\"token\", json.authToken); // Store token in localStorage\r\n-      alert(\"Login Successful!\"); // Ensure alert is used correctly\r\n-      window.location.href = \"/\"; // Redirect user\r\n+    if (data.success) {\r\n+      localStorage.setItem(\"token\", data.authToken); // ✅ Store token in localStorage\r\n+      window.location.href = \"/\"; // ✅ Redirect to home after login\r\n     } else {\r\n-      alert(json.error || \"Invalid login credentials!\");\r\n+      alert(data.error || \"Invalid credentials\"); // ✅ Show error message\r\n     }\r\n   };\r\n \r\n   const onChange = (e) => {\r\n"
                },
                {
                    "date": 1739535848238,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,26 +5,28 @@\n   const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\r\n   const [alert, setAlert] = useState(\"\"); // State to show alert\r\n   const navigate = useNavigate(); // Using useNavigate instead of useHistory\r\n   const handleSubmit = async (e) => {\r\n-    e.preventDefault(); // Prevent page reload\r\n+    e.preventDefault();\r\n \r\n-    const email = e.target.email.value; // Get email input value\r\n-    const password = e.target.password.value; // Get password input value\r\n+    const email = e.target.email.value;\r\n+    const password = e.target.password.value;\r\n \r\n     const response = await fetch(\"http://localhost:5000/api/auth/login\", {\r\n       method: \"POST\",\r\n       headers: { \"Content-Type\": \"application/json\" },\r\n-      body: JSON.stringify({ email, password }), // ✅ Pass only values, NOT event or elements\r\n+      body: JSON.stringify({ email, password }),\r\n     });\r\n \r\n     const data = await response.json();\r\n+    console.log(\"Login Response:\", data); // ✅ Debugging\r\n \r\n-    if (data.success) {\r\n-      localStorage.setItem(\"token\", data.authToken); // ✅ Store token in localStorage\r\n-      window.location.href = \"/\"; // ✅ Redirect to home after login\r\n+    if (data.success && data.authToken) {\r\n+      localStorage.setItem(\"token\", data.authToken); // ✅ Store token properly\r\n+      console.log(\"Token Saved:\", localStorage.getItem(\"token\")); // ✅ Check if token is saved\r\n+      window.location.href = \"/\"; // ✅ Redirect after successful login\r\n     } else {\r\n-      alert(data.error || \"Invalid credentials\"); // ✅ Show error message\r\n+      alert(data.error || \"Invalid credentials\");\r\n     }\r\n   };\r\n \r\n   const onChange = (e) => {\r\n"
                },
                {
                    "date": 1739535938354,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,16 +17,16 @@\n       body: JSON.stringify({ email, password }),\r\n     });\r\n \r\n     const data = await response.json();\r\n-    console.log(\"Login Response:\", data); // ✅ Debugging\r\n+    console.log(\"Login Response:\", data); // Debugging\r\n \r\n     if (data.success && data.authToken) {\r\n-      localStorage.setItem(\"token\", data.authToken); // ✅ Store token properly\r\n-      console.log(\"Token Saved:\", localStorage.getItem(\"token\")); // ✅ Check if token is saved\r\n-      window.location.href = \"/\"; // ✅ Redirect after successful login\r\n+      localStorage.setItem(\"token\", data.authToken); // Save token\r\n+      console.log(\"Token Saved:\", localStorage.getItem(\"token\"));\r\n+      window.location.href = \"/\"; // Redirect after successful login\r\n     } else {\r\n-      alert(data.error || \"Invalid credentials\");\r\n+      window.alert(data.error || \"Invalid credentials\"); // Fix alert usage\r\n     }\r\n   };\r\n \r\n   const onChange = (e) => {\r\n"
                },
                {
                    "date": 1739536007152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,16 +17,18 @@\n       body: JSON.stringify({ email, password }),\r\n     });\r\n \r\n     const data = await response.json();\r\n-    console.log(\"Login Response:\", data); // Debugging\r\n+    console.log(\"Login Response:\", data); // Log the full response for debugging\r\n \r\n-    if (data.success && data.authToken) {\r\n-      localStorage.setItem(\"token\", data.authToken); // Save token\r\n+    if (data.success && data.authtoken) {\r\n+      // Successful login\r\n+      localStorage.setItem(\"token\", data.authtoken); // Save the token\r\n       console.log(\"Token Saved:\", localStorage.getItem(\"token\"));\r\n       window.location.href = \"/\"; // Redirect after successful login\r\n     } else {\r\n-      window.alert(data.error || \"Invalid credentials\"); // Fix alert usage\r\n+      // Invalid credentials or failed login\r\n+      window.alert(data.error || \"Invalid credentials\"); // Display the error message\r\n     }\r\n   };\r\n \r\n   const onChange = (e) => {\r\n"
                },
                {
                    "date": 1739537181143,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,33 +2,48 @@\n import { useNavigate } from \"react-router-dom\";\r\n \r\n const Login = () => {\r\n   const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\r\n-  const [alert, setAlert] = useState(\"\"); // State to show alert\r\n-  const navigate = useNavigate(); // Using useNavigate instead of useHistory\r\n+  const [loading, setLoading] = useState(false);\r\n+  const [alert, setAlert] = useState(\"\"); // Error alert state\r\n+  const [successMessage, setSuccessMessage] = useState(\"\"); // Success message state\r\n+  const navigate = useNavigate();\r\n+\r\n   const handleSubmit = async (e) => {\r\n     e.preventDefault();\r\n+    setLoading(true);\r\n+    setAlert(\"\"); // Reset error before making request\r\n \r\n-    const email = e.target.email.value;\r\n-    const password = e.target.password.value;\r\n+    try {\r\n+      const response = await fetch(\"http://localhost:5000/api/auth/login\", {\r\n+        method: \"POST\",\r\n+        headers: { \"Content-Type\": \"application/json\" },\r\n+        body: JSON.stringify(credentials),\r\n+      });\r\n \r\n-    const response = await fetch(\"http://localhost:5000/api/auth/login\", {\r\n-      method: \"POST\",\r\n-      headers: { \"Content-Type\": \"application/json\" },\r\n-      body: JSON.stringify({ email, password }),\r\n-    });\r\n+      const data = await response.json();\r\n+      setLoading(false);\r\n+      console.log(\"Login Response:\", data);\r\n \r\n-    const data = await response.json();\r\n-    console.log(\"Login Response:\", data); // Log the full response for debugging\r\n+      if (response.ok && data.success && data.authtoken) {\r\n+        // Store the token\r\n+        localStorage.setItem(\"token\", data.authtoken);\r\n \r\n-    if (data.success && data.authtoken) {\r\n-      // Successful login\r\n-      localStorage.setItem(\"token\", data.authtoken); // Save the token\r\n-      console.log(\"Token Saved:\", localStorage.getItem(\"token\"));\r\n-      window.location.href = \"/\"; // Redirect after successful login\r\n-    } else {\r\n-      // Invalid credentials or failed login\r\n-      window.alert(data.error || \"Invalid credentials\"); // Display the error message\r\n+        // Show success message\r\n+        setSuccessMessage(\"Login successful! Redirecting...\");\r\n+\r\n+        // Redirect after 1 second\r\n+        setTimeout(() => {\r\n+          setSuccessMessage(\"\");\r\n+          navigate(\"/\");\r\n+        }, 1000);\r\n+      } else {\r\n+        setAlert(data.error || \"Invalid credentials. Please try again.\");\r\n+      }\r\n+    } catch (err) {\r\n+      setLoading(false);\r\n+      setAlert(\"An error occurred. Please try again later.\");\r\n+      console.error(\"Error during login:\", err);\r\n     }\r\n   };\r\n \r\n   const onChange = (e) => {\r\n@@ -36,11 +51,16 @@\n   };\r\n \r\n   return (\r\n     <div className=\"container my-3\">\r\n-      {/* Show success alert at the top */}\r\n-      {alert && <div className=\"alert alert-success mt-3\">{alert}</div>}\r\n+      {/* Show success message */}\r\n+      {successMessage && (\r\n+        <div className=\"alert alert-success mt-3\">{successMessage}</div>\r\n+      )}\r\n \r\n+      {/* Show error alert */}\r\n+      {alert && <div className=\"alert alert-danger mt-3\">{alert}</div>}\r\n+\r\n       <h2>Login</h2>\r\n       <form onSubmit={handleSubmit}>\r\n         <div className=\"mb-3\">\r\n           <label htmlFor=\"email\" className=\"form-label\">\r\n@@ -52,14 +72,12 @@\n             value={credentials.email}\r\n             onChange={onChange}\r\n             id=\"email\"\r\n             name=\"email\"\r\n-            aria-describedby=\"emailHelp\"\r\n+            required\r\n           />\r\n-          <div id=\"emailHelp\" className=\"form-text\">\r\n-            We'll never share your email with anyone else.\r\n-          </div>\r\n         </div>\r\n+\r\n         <div className=\"mb-3\">\r\n           <label htmlFor=\"password\" className=\"form-label\">\r\n             Password\r\n           </label>\r\n@@ -69,13 +87,14 @@\n             value={credentials.password}\r\n             onChange={onChange}\r\n             name=\"password\"\r\n             id=\"password\"\r\n+            required\r\n           />\r\n         </div>\r\n \r\n-        <button type=\"submit\" className=\"btn btn-primary\">\r\n-          Submit\r\n+        <button type=\"submit\" className=\"btn btn-primary\" disabled={loading}>\r\n+          {loading ? \"Logging in...\" : \"Submit\"}\r\n         </button>\r\n       </form>\r\n     </div>\r\n   );\r\n"
                },
                {
                    "date": 1739537255403,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n         // Store the token\r\n         localStorage.setItem(\"token\", data.authtoken);\r\n \r\n         // Show success message\r\n-        setSuccessMessage(\"Login successful! Redirecting...\");\r\n+        setSuccessMessage(\"Welcome back! Redirecting you to your dashboard...\");\r\n \r\n         // Redirect after 1 second\r\n         setTimeout(() => {\r\n           setSuccessMessage(\"\");\r\n"
                }
            ],
            "date": 1739441177164,
            "name": "Commit-0",
            "content": "import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n  const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\r\n  let history = useHistory();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const response = await fetch(\"http://localhost:5000/api/auth/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        email: credentials.email,\r\n        password: credentials.password,\r\n      }),\r\n    });\r\n    const json = await response.json();\r\n    console.log(json);\r\n    if (json.success) {\r\n      // Save the auth token and redirect\r\n      localStorage.setItem(\"token\", json.authtoken);\r\n      history.push(\"/\");\r\n    } else {\r\n      alert(\"Invalid credentials\");\r\n    }\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setCredentials({ ...credentials, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"email\" className=\"form-label\">\r\n            Email address\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            value={credentials.email}\r\n            onChange={onChange}\r\n            id=\"email\"\r\n            name=\"email\"\r\n            aria-describedby=\"emailHelp\"\r\n          />\r\n          <div id=\"emailHelp\" className=\"form-text\">\r\n            We'll never share your email with anyone else.\r\n          </div>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"password\" className=\"form-label\">\r\n            Password\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            value={credentials.password}\r\n            onChange={onChange}\r\n            name=\"password\"\r\n            id=\"password\"\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"
        }
    ]
}