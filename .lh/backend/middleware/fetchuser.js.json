{
    "sourceFile": "backend/middleware/fetchuser.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1739379264744,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1739440599997,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,22 +1,19 @@\n-const jwt = require(\"jsonwebtoken\");\r\n-const JWT_SECRET = process.env.JWT_SECRET || \"password@123\"; // Store secret in env for better security\r\n+var jwt = require(\"jsonwebtoken\");\r\n+const JWT_SECRET = \"password@123\";\r\n \r\n const fetchuser = (req, res, next) => {\r\n-  // Extract token from Authorization header: \"Bearer <token>\"\r\n-  const token = req.header(\"Authorization\")?.split(\" \")[1];\r\n-\r\n+  // Get the user from the jwt token and add id to req object\r\n+  const token = req.header(\"auth-token\");\r\n   if (!token) {\r\n-    return res.status(401).json({ error: \"Access denied. No token provided.\" });\r\n+    res.status(401).send({ error: \"Please authenticate using a valid token\" });\r\n   }\r\n-\r\n   try {\r\n-    // Verify token and extract user data\r\n     const data = jwt.verify(token, JWT_SECRET);\r\n     req.user = data.user;\r\n-    next(); // Proceed to the next middleware or route handler\r\n+    next();\r\n   } catch (error) {\r\n-    return res.status(401).json({ error: \"Invalid token.\" });\r\n+    res.status(401).send({ error: \"Please authenticate using a valid token\" });\r\n   }\r\n };\r\n \r\n module.exports = fetchuser;\r\n"
                },
                {
                    "date": 1739453875375,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n \r\n const fetchuser = (req, res, next) => {\r\n   // Get the user from the jwt token and add id to req object\r\n   const token = req.header(\"auth-token\");\r\n+  console.log(\"Middleware reached, token:\", req.header(\"auth-token\"));\r\n   if (!token) {\r\n     res.status(401).send({ error: \"Please authenticate using a valid token\" });\r\n   }\r\n   try {\r\n"
                },
                {
                    "date": 1739453937664,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,18 +3,24 @@\n \r\n const fetchuser = (req, res, next) => {\r\n   // Get the user from the jwt token and add id to req object\r\n   const token = req.header(\"auth-token\");\r\n-  console.log(\"Middleware reached, token:\", req.header(\"auth-token\"));\r\n+  console.log(\"Middleware reached, token:\", token);\r\n+\r\n   if (!token) {\r\n-    res.status(401).send({ error: \"Please authenticate using a valid token\" });\r\n+    return res\r\n+      .status(401)\r\n+      .send({ error: \"Please authenticate using a valid token\" }); // ⬅️ Added return here\r\n   }\r\n+\r\n   try {\r\n     const data = jwt.verify(token, JWT_SECRET);\r\n     req.user = data.user;\r\n     next();\r\n   } catch (error) {\r\n-    res.status(401).send({ error: \"Please authenticate using a valid token\" });\r\n+    return res\r\n+      .status(401)\r\n+      .send({ error: \"Please authenticate using a valid token\" }); // ⬅️ Added return here\r\n   }\r\n };\r\n \r\n module.exports = fetchuser;\r\n"
                }
            ],
            "date": 1739379264744,
            "name": "Commit-0",
            "content": "const jwt = require(\"jsonwebtoken\");\r\nconst JWT_SECRET = process.env.JWT_SECRET || \"password@123\"; // Store secret in env for better security\r\n\r\nconst fetchuser = (req, res, next) => {\r\n  // Extract token from Authorization header: \"Bearer <token>\"\r\n  const token = req.header(\"Authorization\")?.split(\" \")[1];\r\n\r\n  if (!token) {\r\n    return res.status(401).json({ error: \"Access denied. No token provided.\" });\r\n  }\r\n\r\n  try {\r\n    // Verify token and extract user data\r\n    const data = jwt.verify(token, JWT_SECRET);\r\n    req.user = data.user;\r\n    next(); // Proceed to the next middleware or route handler\r\n  } catch (error) {\r\n    return res.status(401).json({ error: \"Invalid token.\" });\r\n  }\r\n};\r\n\r\nmodule.exports = fetchuser;\r\n"
        }
    ]
}